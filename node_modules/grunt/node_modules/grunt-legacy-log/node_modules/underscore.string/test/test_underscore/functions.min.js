$(document).ready(function(){module("Functions");test("bind",function(){var a={name:"moe"};var e=function(f){return"name: "+(this.name||f)};var c=_.bind(e,a);equal(c(),"name: moe","can bind a function to a context");c=_(e).bind(a);equal(c(),"name: moe","can do OO-style binding");c=_.bind(e,null,"curly");equal(c(),"name: curly","can bind without specifying a context");e=function(g,f){return g+": "+f};e=_.bind(e,this,"hello");equal(e("moe"),"hello: moe","the function was partially applied in advance");var e=_.bind(e,this,"curly");equal(e(),"hello: curly","the function was completely applied in advance");var e=function(h,g,f){return h+": "+g+" "+f};e=_.bind(e,this,"hello","moe","curly");equal(e(),"hello: moe curly","the function was partially applied in advance and can accept multiple arguments");e=function(f,g){equal(this,f,g)};_.bind(e,0,0,"can bind a function to `0`")();_.bind(e,"","","can bind a function to an empty string")();_.bind(e,false,false,"can bind a function to `false`")();var d=function(){return this};var b=_.bind(d,{hello:"moe curly"});equal(new b().hello,undefined,"function should not be bound to the context, to comply with ECMAScript 5");equal(b().hello,"moe curly","When called without the new operator, it's OK to be bound to the context")});test("bindAll",function(){var a={name:"curly"},b={name:"moe",getName:function(){return"name: "+this.name},sayHi:function(){return"hi: "+this.name}};a.getName=b.getName;_.bindAll(b,"getName","sayHi");a.sayHi=b.sayHi;equal(a.getName(),"name: curly","unbound function is bound to current object");equal(a.sayHi(),"hi: moe","bound function is still bound to original object");a={name:"curly"};b={name:"moe",getName:function(){return"name: "+this.name},sayHi:function(){return"hi: "+this.name}};_.bindAll(b);a.sayHi=b.sayHi;equal(a.sayHi(),"hi: moe","calling bindAll with no arguments binds all functions to the object")});test("memoize",function(){var a=function(e){return e<2?e:a(e-1)+a(e-2)};var c=_.memoize(a);equal(a(10),55,"a memoized version of fibonacci produces identical results");equal(c(10),55,"a memoized version of fibonacci produces identical results");var d=function(e){return e};var b=_.memoize(d);equal(d("toString"),"toString","checks hasOwnProperty");equal(b("toString"),"toString","checks hasOwnProperty")});asyncTest("delay",2,function(){var a=false;_.delay(function(){a=true},100);setTimeout(function(){ok(!a,"didn't delay the function quite yet")},50);setTimeout(function(){ok(a,"delayed the function");start()},150)});asyncTest("defer",1,function(){var a=false;_.defer(function(b){a=b},true);_.delay(function(){ok(a,"deferred the function");start()},50)});asyncTest("throttle",2,function(){var a=0;var c=function(){a++};var b=_.throttle(c,100);b();b();b();setTimeout(b,70);setTimeout(b,120);setTimeout(b,140);setTimeout(b,190);setTimeout(b,220);setTimeout(b,240);_.delay(function(){equal(a,1,"incr was called immediately")},30);_.delay(function(){equal(a,4,"incr was throttled");start()},400)});asyncTest("throttle arguments",2,function(){var a=0;var c=function(d){a=d};var b=_.throttle(c,100);b(1);b(2);b(3);setTimeout(function(){b(4)},120);setTimeout(function(){b(5)},140);setTimeout(function(){b(6)},250);_.delay(function(){equal(a,1,"updated to latest value")},40);_.delay(function(){equal(a,6,"updated to latest value");start()},400)});asyncTest("throttle once",2,function(){var b=0;var d=function(){return ++b};var c=_.throttle(d,100);var a=c();_.delay(function(){equal(a,1,"throttled functions return their value");equal(b,1,"incr was called once");start()},220)});asyncTest("throttle twice",1,function(){var a=0;var c=function(){a++};var b=_.throttle(c,100);b();b();_.delay(function(){equal(a,2,"incr was called twice");start()},220)});asyncTest("throttle repeatedly with results",9,function(){var a=0;var e=function(){return ++a};var d=_.throttle(e,100);var c=[];var b=function(){c.push(d())};b();b();b();setTimeout(b,70);setTimeout(b,120);setTimeout(b,140);setTimeout(b,190);setTimeout(b,240);setTimeout(b,260);_.delay(function(){equal(c[0],1,"incr was called once");equal(c[1],1,"incr was throttled");equal(c[2],1,"incr was throttled");equal(c[3],1,"incr was throttled");equal(c[4],2,"incr was called twice");equal(c[5],2,"incr was throttled");equal(c[6],2,"incr was throttled");equal(c[7],3,"incr was called thrice");equal(c[8],3,"incr was throttled");start()},400)});asyncTest("debounce",1,function(){var a=0;var c=function(){a++};var b=_.debounce(c,50);b();b();b();setTimeout(b,30);setTimeout(b,60);setTimeout(b,90);setTimeout(b,120);setTimeout(b,150);_.delay(function(){equal(a,1,"incr was debounced");start()},220)});asyncTest("debounce asap",5,function(){var f,d,i;var e=0;var h=function(){return ++e};var g=_.debounce(h,50,true);f=g();d=g();i=g();equal(f,1);equal(d,1);equal(i,1);equal(e,1,"incr was called immediately");setTimeout(g,30);setTimeout(g,60);setTimeout(g,90);setTimeout(g,120);setTimeout(g,150);_.delay(function(){equal(e,1,"incr was debounced");start()},220)});asyncTest("debounce asap recursively",2,function(){var a=0;var b=_.debounce(function(){a++;if(a<5){b()}},50,true);b();equal(a,1,"incr was called immediately");_.delay(function(){equal(a,1,"incr was debounced");start()},70)});test("once",function(){var b=0;var a=_.once(function(){b++});a();a();equal(b,1)});test("wrap",function(){var b=function(h){return"hi: "+h};var a=_.wrap(b,function(i,h){return i(h)+" "+h.split("").reverse().join("")});equal(a("moe"),"hi: moe eom","wrapped the saluation function");var d=function(){return"Hello "};var g={name:"Moe"};g.hi=_.wrap(d,function(h){return h()+this.name});equal(g.hi(),"Hello Moe");var f=function(){};var c=_.wrap(f,function(h){return Array.prototype.slice.call(arguments,0)});var e=c(["whats","your"],"vector","victor");deepEqual(e,[f,["whats","your"],"vector","victor"])});test("compose",function(){var a=function(d){return"hi: "+d};var c=function(d){return d+"!"};var b=_.compose(c,a);equal(b("moe"),"hi: moe!","can compose a function that takes another");b=_.compose(a,c);equal(b("moe"),"hi: moe!","in this case, the functions are also commutative")});test("after",function(){var a=function(c,b){var e=0;var d=_.after(c,function(){e++});while(b--){d()}return e};equal(a(5,5),1,"after(N) should fire after being called N times");equal(a(5,4),0,"after(N) should not fire unless called N times");equal(a(0,0),1,"after(0) should fire immediately")})});