"use strict";var util=require("util");var hooker=require("hooker");var colors=require("colors");var _=require("lodash");_.str=require("underscore.string");_.mixin(_.str.exports());var logUtils=require("grunt-legacy-log-utils");function Log(a){this.always=this;this.options=_.extend({},{color:true,verbose:false,debug:false,outStream:process.stdout,grunt:null,maxCols:null,muted:false,},a);this.hasLogged=false;this.verbose=new VerboseLog(this,true);this.notverbose=new VerboseLog(this,false);this.verbose.or=this.notverbose;this.notverbose.or=this.verbose;if(this.options.grunt){_.bindAll(this);_.bindAll(this.verbose);_.bindAll(this.notverbose)}}exports.Log=Log;function VerboseLog(b,a){this.always=b;this._isVerbose=a}util.inherits(VerboseLog,Log);VerboseLog.prototype._write=function(){if(Boolean(this.option("verbose"))!==this._isVerbose){return}return VerboseLog.super_.prototype._write.apply(this,arguments)};function makeSmartAccessor(b,a){Object.defineProperty(Log.prototype,b,{enumerable:true,configurable:true,get:function(){return a?this.always._options[b]:this.always["_"+b]},set:function(c){if(a){this.always._options[b]=c}else{this.always["_"+b]=c}},})}makeSmartAccessor("options");makeSmartAccessor("hasLogged");makeSmartAccessor("muted",true);Log.prototype.initColors=function(){if(this.option("no-color")){colors.mode="none";hooker.hook(console,"log",function(){var a=_.toArray(arguments);return hooker.filter(this,a.map(function(b){return typeof b==="string"?colors.stripColors(b):b}))})}};Log.prototype.option=function(a){if(this.options.grunt&&this.options.grunt.option){return this.options.grunt.option(a)}var b=a.match(/^no-(.+)$/);return b?!this.options[b[1]]:this.options[a]};Log.prototype._markup=function(a){a=a||"";a=a.replace(/(\s|^)_(\S|\S[\s\S]+?\S)_(?=[\s,.!?]|$)/g,"$1"+"$2".underline);a=a.replace(/(\s|^)\*(\S|\S[\s\S]+?\S)\*(?=[\s,.!?]|$)/g,"$1"+"$2".bold);return a};Log.prototype._format=function(a){a=_.toArray(a);if(a.length>0){a[0]=String(a[0])}return util.format.apply(util,a)};Log.prototype._write=function(a){if(this.muted){return}this.hasLogged=true;a=a||"";if(this.option("no-color")){a=colors.stripColors(a)}this.options.outStream.write(this._markup(a))};Log.prototype._writeln=function(a){this._write((a||"")+"\n")};Log.prototype.write=function(){this._write(this._format(arguments));return this};Log.prototype.writeln=function(){this._writeln(this._format(arguments));return this};Log.prototype.warn=function(){var a=this._format(arguments);if(arguments.length>0){this._writeln(">> ".red+_.trim(a).replace(/\n/g,"\n>> ".red))}else{this._writeln("ERROR".red)}return this};Log.prototype.error=function(){if(this.options.grunt&&this.options.grunt.fail){this.options.grunt.fail.errorcount++}this.warn.apply(this,arguments);return this};Log.prototype.ok=function(){var a=this._format(arguments);if(arguments.length>0){this._writeln(">> ".green+_.trim(a).replace(/\n/g,"\n>> ".green))}else{this._writeln("OK".green)}return this};Log.prototype.errorlns=function(){var a=this._format(arguments);this.error(this.wraptext(this.options.maxCols||77,a));return this};Log.prototype.oklns=function(){var a=this._format(arguments);this.ok(this.wraptext(this.options.maxCols||77,a));return this};Log.prototype.success=function(){var a=this._format(arguments);this._writeln(a.green);return this};Log.prototype.fail=function(){var a=this._format(arguments);this._writeln(a.red);return this};Log.prototype.header=function(){var a=this._format(arguments);if(this.hasLogged){this._writeln()}this._writeln(a.underline);return this};Log.prototype.subhead=function(){var a=this._format(arguments);if(this.hasLogged){this._writeln()}this._writeln(a.bold);return this};Log.prototype.debug=function(){var a=this._format(arguments);if(this.option("debug")){this._writeln("[D] "+a.magenta)}return this};Log.prototype.writetableln=function(a,b){this._writeln(this.table(a,b));return this};Log.prototype.writelns=function(){var a=this._format(arguments);this._writeln(this.wraptext(this.options.maxCols||80,a));return this};Log.prototype.writeflags=function(c,b){var a;if(Array.isArray(c)){a=this.wordlist(c)}else{if(typeof c==="object"&&c){a=this.wordlist(Object.keys(c).map(function(d){var e=c[d];return d+(e===true?"":"="+JSON.stringify(e))}))}}this._writeln((b||"Flags")+": "+(a||"(none)".cyan));return this};["wordlist","uncolor","wraptext","table",].forEach(function(a){Log.prototype[a]=exports[a]=logUtils[a]});