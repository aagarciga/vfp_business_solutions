(function(){var f,i,a,c,b,d,g,e,j,h;f=require("jison").Parser;h=/^function\s*\(\)\s*\{\s*return\s*([\s\S]*);\s*\}/;d=function(n,m,l){var k;n=n.replace(/\s{2,}/g," ");if(!m){return[n,"$$ = $1;",l]}m=(k=h.exec(m))?k[1]:"("+m+"())";m=m.replace(/\bnew /g,"$&yy.");m=m.replace(/\b(?:Block\.wrap|extend)\b/g,"yy.$&");return[n,"$$ = "+m+";",l]};c={Root:[d("",function(){return new Block}),d("Body"),d("Block TERMINATOR")],Body:[d("Line",function(){return Block.wrap([$1])}),d("Body TERMINATOR Line",function(){return $1.push($3)}),d("Body TERMINATOR")],Line:[d("Expression"),d("Statement")],Statement:[d("Return"),d("Comment"),d("STATEMENT",function(){return new Literal($1)})],Expression:[d("Value"),d("Invocation"),d("Code"),d("Operation"),d("Assign"),d("If"),d("Try"),d("While"),d("For"),d("Switch"),d("Class"),d("Throw")],Block:[d("INDENT OUTDENT",function(){return new Block}),d("INDENT Body OUTDENT",function(){return $2})],Identifier:[d("IDENTIFIER",function(){return new Literal($1)})],AlphaNumeric:[d("NUMBER",function(){return new Literal($1)}),d("STRING",function(){return new Literal($1)})],Literal:[d("AlphaNumeric"),d("JS",function(){return new Literal($1)}),d("REGEX",function(){return new Literal($1)}),d("DEBUGGER",function(){return new Literal($1)}),d("UNDEFINED",function(){return new Undefined}),d("NULL",function(){return new Null}),d("BOOL",function(){return new Bool($1)})],Assign:[d("Assignable = Expression",function(){return new Assign($1,$3)}),d("Assignable = TERMINATOR Expression",function(){return new Assign($1,$4)}),d("Assignable = INDENT Expression OUTDENT",function(){return new Assign($1,$4)})],AssignObj:[d("ObjAssignable",function(){return new Value($1)}),d("ObjAssignable : Expression",function(){return new Assign(new Value($1),$3,"object")}),d("ObjAssignable :       INDENT Expression OUTDENT",function(){return new Assign(new Value($1),$4,"object")}),d("Comment")],ObjAssignable:[d("Identifier"),d("AlphaNumeric"),d("ThisProperty")],Return:[d("RETURN Expression",function(){return new Return($2)}),d("RETURN",function(){return new Return})],Comment:[d("HERECOMMENT",function(){return new Comment($1)})],Code:[d("PARAM_START ParamList PARAM_END FuncGlyph Block",function(){return new Code($2,$5,$4)}),d("FuncGlyph Block",function(){return new Code([],$2,$1)})],FuncGlyph:[d("->",function(){return"func"}),d("=>",function(){return"boundfunc"})],OptComma:[d(""),d(",")],ParamList:[d("",function(){return[]}),d("Param",function(){return[$1]}),d("ParamList , Param",function(){return $1.concat($3)}),d("ParamList OptComma TERMINATOR Param",function(){return $1.concat($4)}),d("ParamList OptComma INDENT ParamList OptComma OUTDENT",function(){return $1.concat($4)})],Param:[d("ParamVar",function(){return new Param($1)}),d("ParamVar ...",function(){return new Param($1,null,true)}),d("ParamVar = Expression",function(){return new Param($1,$3)})],ParamVar:[d("Identifier"),d("ThisProperty"),d("Array"),d("Object")],Splat:[d("Expression ...",function(){return new Splat($1)})],SimpleAssignable:[d("Identifier",function(){return new Value($1)}),d("Value Accessor",function(){return $1.add($2)}),d("Invocation Accessor",function(){return new Value($1,[].concat($2))}),d("ThisProperty")],Assignable:[d("SimpleAssignable"),d("Array",function(){return new Value($1)}),d("Object",function(){return new Value($1)})],Value:[d("Assignable"),d("Literal",function(){return new Value($1)}),d("Parenthetical",function(){return new Value($1)}),d("Range",function(){return new Value($1)}),d("This")],Accessor:[d(".  Identifier",function(){return new Access($2)}),d("?. Identifier",function(){return new Access($2,"soak")}),d(":: Identifier",function(){return[new Access(new Literal("prototype")),new Access($2)]}),d("::",function(){return new Access(new Literal("prototype"))}),d("Index")],Index:[d("INDEX_START IndexValue INDEX_END",function(){return $2}),d("INDEX_SOAK  Index",function(){return extend($2,{soak:true})})],IndexValue:[d("Expression",function(){return new Index($1)}),d("Slice",function(){return new Slice($1)})],Object:[d("{ AssignList OptComma }",function(){return new Obj($2,$1.generated)})],AssignList:[d("",function(){return[]}),d("AssignObj",function(){return[$1]}),d("AssignList , AssignObj",function(){return $1.concat($3)}),d("AssignList OptComma TERMINATOR AssignObj",function(){return $1.concat($4)}),d("AssignList OptComma INDENT AssignList OptComma OUTDENT",function(){return $1.concat($4)})],Class:[d("CLASS",function(){return new Class}),d("CLASS Block",function(){return new Class(null,null,$2)}),d("CLASS EXTENDS Expression",function(){return new Class(null,$3)}),d("CLASS EXTENDS Expression Block",function(){return new Class(null,$3,$4)}),d("CLASS SimpleAssignable",function(){return new Class($2)}),d("CLASS SimpleAssignable Block",function(){return new Class($2,null,$3)}),d("CLASS SimpleAssignable EXTENDS Expression",function(){return new Class($2,$4)}),d("CLASS SimpleAssignable EXTENDS Expression Block",function(){return new Class($2,$4,$5)})],Invocation:[d("Value OptFuncExist Arguments",function(){return new Call($1,$3,$2)}),d("Invocation OptFuncExist Arguments",function(){return new Call($1,$3,$2)}),d("SUPER",function(){return new Call("super",[new Splat(new Literal("arguments"))])}),d("SUPER Arguments",function(){return new Call("super",$2)})],OptFuncExist:[d("",function(){return false}),d("FUNC_EXIST",function(){return true})],Arguments:[d("CALL_START CALL_END",function(){return[]}),d("CALL_START ArgList OptComma CALL_END",function(){return $2})],This:[d("THIS",function(){return new Value(new Literal("this"))}),d("@",function(){return new Value(new Literal("this"))})],ThisProperty:[d("@ Identifier",function(){return new Value(new Literal("this"),[new Access($2)],"this")})],Array:[d("[ ]",function(){return new Arr([])}),d("[ ArgList OptComma ]",function(){return new Arr($2)})],RangeDots:[d("..",function(){return"inclusive"}),d("...",function(){return"exclusive"})],Range:[d("[ Expression RangeDots Expression ]",function(){return new Range($2,$4,$3)})],Slice:[d("Expression RangeDots Expression",function(){return new Range($1,$3,$2)}),d("Expression RangeDots",function(){return new Range($1,null,$2)}),d("RangeDots Expression",function(){return new Range(null,$2,$1)}),d("RangeDots",function(){return new Range(null,null,$1)})],ArgList:[d("Arg",function(){return[$1]}),d("ArgList , Arg",function(){return $1.concat($3)}),d("ArgList OptComma TERMINATOR Arg",function(){return $1.concat($4)}),d("INDENT ArgList OptComma OUTDENT",function(){return $2}),d("ArgList OptComma INDENT ArgList OptComma OUTDENT",function(){return $1.concat($4)})],Arg:[d("Expression"),d("Splat")],SimpleArgs:[d("Expression"),d("SimpleArgs , Expression",function(){return[].concat($1,$3)})],Try:[d("TRY Block",function(){return new Try($2)}),d("TRY Block Catch",function(){return new Try($2,$3[0],$3[1])}),d("TRY Block FINALLY Block",function(){return new Try($2,null,null,$4)}),d("TRY Block Catch FINALLY Block",function(){return new Try($2,$3[0],$3[1],$5)})],Catch:[d("CATCH Identifier Block",function(){return[$2,$3]})],Throw:[d("THROW Expression",function(){return new Throw($2)})],Parenthetical:[d("( Body )",function(){return new Parens($2)}),d("( INDENT Body OUTDENT )",function(){return new Parens($3)})],WhileSource:[d("WHILE Expression",function(){return new While($2)}),d("WHILE Expression WHEN Expression",function(){return new While($2,{guard:$4})}),d("UNTIL Expression",function(){return new While($2,{invert:true})}),d("UNTIL Expression WHEN Expression",function(){return new While($2,{invert:true,guard:$4})})],While:[d("WhileSource Block",function(){return $1.addBody($2)}),d("Statement  WhileSource",function(){return $2.addBody(Block.wrap([$1]))}),d("Expression WhileSource",function(){return $2.addBody(Block.wrap([$1]))}),d("Loop",function(){return $1})],Loop:[d("LOOP Block",function(){return new While(new Literal("true")).addBody($2)}),d("LOOP Expression",function(){return new While(new Literal("true")).addBody(Block.wrap([$2]))})],For:[d("Statement  ForBody",function(){return new For($1,$2)}),d("Expression ForBody",function(){return new For($1,$2)}),d("ForBody    Block",function(){return new For($2,$1)})],ForBody:[d("FOR Range",function(){return{source:new Value($2)}}),d("ForStart ForSource",function(){$2.own=$1.own;$2.name=$1[0];$2.index=$1[1];return $2})],ForStart:[d("FOR ForVariables",function(){return $2}),d("FOR OWN ForVariables",function(){$3.own=true;return $3})],ForValue:[d("Identifier"),d("ThisProperty"),d("Array",function(){return new Value($1)}),d("Object",function(){return new Value($1)})],ForVariables:[d("ForValue",function(){return[$1]}),d("ForValue , ForValue",function(){return[$1,$3]})],ForSource:[d("FORIN Expression",function(){return{source:$2}}),d("FOROF Expression",function(){return{source:$2,object:true}}),d("FORIN Expression WHEN Expression",function(){return{source:$2,guard:$4}}),d("FOROF Expression WHEN Expression",function(){return{source:$2,guard:$4,object:true}}),d("FORIN Expression BY Expression",function(){return{source:$2,step:$4}}),d("FORIN Expression WHEN Expression BY Expression",function(){return{source:$2,guard:$4,step:$6}}),d("FORIN Expression BY Expression WHEN Expression",function(){return{source:$2,step:$4,guard:$6}})],Switch:[d("SWITCH Expression INDENT Whens OUTDENT",function(){return new Switch($2,$4)}),d("SWITCH Expression INDENT Whens ELSE Block OUTDENT",function(){return new Switch($2,$4,$6)}),d("SWITCH INDENT Whens OUTDENT",function(){return new Switch(null,$3)}),d("SWITCH INDENT Whens ELSE Block OUTDENT",function(){return new Switch(null,$3,$5)})],Whens:[d("When"),d("Whens When",function(){return $1.concat($2)})],When:[d("LEADING_WHEN SimpleArgs Block",function(){return[[$2,$3]]}),d("LEADING_WHEN SimpleArgs Block TERMINATOR",function(){return[[$2,$3]]})],IfBlock:[d("IF Expression Block",function(){return new If($2,$3,{type:$1})}),d("IfBlock ELSE IF Expression Block",function(){return $1.addElse(new If($4,$5,{type:$3}))})],If:[d("IfBlock"),d("IfBlock ELSE Block",function(){return $1.addElse($3)}),d("Statement  POST_IF Expression",function(){return new If($3,Block.wrap([$1]),{type:$2,statement:true})}),d("Expression POST_IF Expression",function(){return new If($3,Block.wrap([$1]),{type:$2,statement:true})})],Operation:[d("UNARY Expression",function(){return new Op($1,$2)}),d("-     Expression",(function(){return new Op("-",$2)}),{prec:"UNARY"}),d("+     Expression",(function(){return new Op("+",$2)}),{prec:"UNARY"}),d("-- SimpleAssignable",function(){return new Op("--",$2)}),d("++ SimpleAssignable",function(){return new Op("++",$2)}),d("SimpleAssignable --",function(){return new Op("--",$1,null,true)}),d("SimpleAssignable ++",function(){return new Op("++",$1,null,true)}),d("Expression ?",function(){return new Existence($1)}),d("Expression +  Expression",function(){return new Op("+",$1,$3)}),d("Expression -  Expression",function(){return new Op("-",$1,$3)}),d("Expression MATH     Expression",function(){return new Op($2,$1,$3)}),d("Expression SHIFT    Expression",function(){return new Op($2,$1,$3)}),d("Expression COMPARE  Expression",function(){return new Op($2,$1,$3)}),d("Expression LOGIC    Expression",function(){return new Op($2,$1,$3)}),d("Expression RELATION Expression",function(){if($2.charAt(0)==="!"){return new Op($2.slice(1),$1,$3).invert()}else{return new Op($2,$1,$3)}}),d("SimpleAssignable COMPOUND_ASSIGN       Expression",function(){return new Assign($1,$3,$2)}),d("SimpleAssignable COMPOUND_ASSIGN       INDENT Expression OUTDENT",function(){return new Assign($1,$4,$2)}),d("SimpleAssignable EXTENDS Expression",function(){return new Extends($1,$3)})]};g=[["left",".","?.","::"],["left","CALL_START","CALL_END"],["nonassoc","++","--"],["left","?"],["right","UNARY"],["left","MATH"],["left","+","-"],["left","SHIFT"],["left","RELATION"],["left","COMPARE"],["left","LOGIC"],["nonassoc","INDENT","OUTDENT"],["right","=",":","COMPOUND_ASSIGN","RETURN","THROW","EXTENDS"],["right","FORIN","FOROF","BY","WHEN"],["right","IF","ELSE","FOR","WHILE","UNTIL","LOOP","SUPER","CLASS"],["right","POST_IF"]];j=[];for(b in c){a=c[b];c[b]=(function(){var p,n,m,l,o,k;k=[];for(p=0,m=a.length;p<m;p++){i=a[p];o=i[0].split(" ");for(n=0,l=o.length;n<l;n++){e=o[n];if(!c[e]){j.push(e)}}if(b==="Root"){i[1]="return "+i[1]}k.push(i)}return k})()}exports.parser=new f({tokens:j.join(" "),bnf:c,operators:g.reverse(),startSymbol:"Root"})}).call(this);