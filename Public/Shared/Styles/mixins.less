// Quick floats
// Float an element to the left or right with a class.
// !important is included to avoid specificity issues.
// Classes can also be used as mixins.
.pull-left() {
    float: left !important;
}

.pull-right() {
    float: right !important;
}

// Usage as mixins
//.element {
//  .pull-left();
//}
//.another-element {
//  .pull-right();
//}

// Clearfix --------------------------------------
// Mixin itself
.clearfix() {
    &:before,
    &:after {
        content: " ";
        display: table;
    }
    &:after {
        clear: both;
    }
}

// Box Sizing -----------------------------------
.box-sizing(@box-model) {
    -webkit-box-sizing: @box-model; // Safari <= 5
    -moz-box-sizing: @box-model; // Firefox <= 19
    box-sizing: @box-model;
}

// Box Shadow -----------------------------------
.box-shadow(@shadow: 0 1px 3px rgba(0,0,0,.25)) {
    -webkit-box-shadow: @shadow; // iOS <4.3 & Android <4.1
    -moz-box-shadow: @shadow;
    box-shadow: @shadow;
}

// Transitions -----------------------------------
.transition(@transition) {
    -webkit-transition: @transition;
    transition: @transition;
}

.transition-property(@transition-property) {
    -webkit-transition-property: @transition-property;
    transition-property: @transition-property;
}

.transition-delay(@transition-delay) {
    -webkit-transition-delay: @transition-delay;
    transition-delay: @transition-delay;
}

.transition-duration(@transition-duration) {
    -webkit-transition-duration: @transition-duration;
    transition-duration: @transition-duration;
}

.transition-transform(@transition) {
    -webkit-transition: -webkit-transform @transition;
    -moz-transition: -moz-transform @transition;
    -o-transition: -o-transform @transition;
    transition: transform @transition;
}

// Transformations -------------------------------
.rotate(@degrees) {
    -webkit-transform: rotate(@degrees);
    -ms-transform: rotate(@degrees); // IE9 only
    transform: rotate(@degrees);
}

.scale(@ratio; @ratio-y...) {
    -webkit-transform: scale(@ratio, @ratio-y);
    -ms-transform: scale(@ratio, @ratio-y); // IE9 only
    transform: scale(@ratio, @ratio-y);
}

.translate(@x; @y) {
    -webkit-transform: translate(@x, @y);
    -ms-transform: translate(@x, @y); // IE9 only
    transform: translate(@x, @y);
}

.skew(@x; @y) {
    -webkit-transform: skew(@x, @y);
    -ms-transform: skewX(@x) skewY(@y); // See https://github.com/twbs/bootstrap/issues/4885; IE9+
    transform: skew(@x, @y);
}

.translate3d(@x; @y; @z) {
    -webkit-transform: translate3d(@x, @y, @z);
    transform: translate3d(@x, @y, @z);
}

.rotateX(@degrees) {
    -webkit-transform: rotateX(@degrees);
    -ms-transform: rotateX(@degrees); // IE9 only
    transform: rotateX(@degrees);
}

.rotateY(@degrees) {
    -webkit-transform: rotateY(@degrees);
    -ms-transform: rotateY(@degrees); // IE9 only
    transform: rotateY(@degrees);
}

.perspective(@perspective) {
    -webkit-perspective: @perspective;
    -moz-perspective: @perspective;
    perspective: @perspective;
}

.perspective-origin(@perspective) {
    -webkit-perspective-origin: @perspective;
    -moz-perspective-origin: @perspective;
    perspective-origin: @perspective;
}

.transform-origin(@origin) {
    -webkit-transform-origin: @origin;
    -moz-transform-origin: @origin;
    -ms-transform-origin: @origin; // IE9 only
    transform-origin: @origin;
}

// Opacity ---------------------------------------
.opacity(@opacity) {
    opacity: @opacity;
    // IE8 filter
    @opacity-ie: (@opacity * 100);
    filter: ~"alpha(opacity=@{opacity-ie})";
}

// Horizontal centering -------------------------
// Quickly center any element within its parent.
// Requires width or max-width to be set.
.center-block() {
    display: block;
    margin-left: auto;
    margin-right: auto;
}

// Sizing helpers -------------------------------
// Specify the dimensions of an object more easily.
.size(@width; @height) {
    width: @width;
    height: @height;
}

.square(@size) {
    .size(@size; @size);
}

// Resizable textareas
// Easily configure the resize options for any textarea, or any other element.
// Defaults to normal browser behavior (both).
.resizable(@direction: both) {
    // Options: horizontal, vertical, both
    resize: @direction;
    // Safari fix
    overflow: auto;
}

// Truncating text
// Easily truncate text with an ellipsis with a single mixin.
// Requires element to be block or inline-block level.
// Mixin
.text-overflow() {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

// Retina images
// Specify two image paths and the @1x image dimensions, and Bootstrap will provide an @2x media query.
// If you have many images to serve, consider writing your retina image CSS manually in a single media query.
.img-retina(@file-1x; @file-2x; @width-1x; @height-1x) {
    background-image: url("@{file-1x}");

    @media only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (   min--moz-device-pixel-ratio: 2), only screen and (     -o-min-device-pixel-ratio: 2/1), only screen and (        min-device-pixel-ratio: 2), only screen and (                min-resolution: 192dpi), only screen and (                min-resolution: 2dppx) {
        background-image: url("@{file-2x}");
        background-size: @width-1x @height-1x;
    }
}

// Usage
//.jumbotron {
//  .img-retina("/img/bg-1x.png", "/img/bg-2x.png", 100px, 100px);
//}

// Columns
// Generate columns via CSS within a single element.
.content-columns(@width; @count; @gap) {
    -webkit-column-width: @width;
    -moz-column-width: @width;
    column-width: @width;
    -webkit-column-count: @count;
    -moz-column-count: @count;
    column-count: @count;
    -webkit-column-gap: @gap;
    -moz-column-gap: @gap;
    column-gap: @gap;
}

.border-radius (@radius: 5px) {
    -webkit-border-radius: @radius;
    -moz-border-radius:    @radius;
    border-radius:         @radius;

    -moz-background-clip:    padding;
    -webkit-background-clip: padding-box;
    background-clip:         padding-box;
}