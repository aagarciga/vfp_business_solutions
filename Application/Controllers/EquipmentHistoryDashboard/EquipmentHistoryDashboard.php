<?php
/**
 * Project:  VFP Business Series
 * Copyright: 2014. VFP Business Solutions, LLC
 */

namespace Dandelion\MVC\Application\Controllers;

/**
 * Class EquipmentHistoryDashboard
 * @package Dandelion\MVC\Application\Controllers
 */

use Dandelion\MVC\Core\Request;
use Dandelion\TreeCreator;
use Dandelion\Tools\Filter\BlockExpressionNode;
//use Dandelion\MVC\Application\Tools\Session; // TODO: Poner el objeto session en el controller like actions.

class EquipmentHistoryDashboard extends DatDashboardController
{
    /**
     * Pre controller method
     * @param \Dandelion\MVC\Core\Request $request
     */
    protected function PreController(Request $request)
    {
        parent::PreController($request); // TODO: Change the autogenerated stub
        TreeCreator::Init();
    }

    // TODO: refactoring on that pendent
    public function getSessionFilterTree(){
        $defaultJsonTree = json_encode(TreeCreator::treeToArray($this->getDefaultFilterTree()));
        $jsonFilterTree = $this->Session->getSessionValue('FilterTree', $defaultJsonTree);
//        Victor Code below
//        $jsonFilterTree = Session::getSessionValue($this->getSessionId(FILTER_TREE_SUFFIX), $defaultJsonTree);
        return TreeCreator::createTree(json_decode($jsonFilterTree));
    }

    /**
     * @param string | IFilterNode $filterTree
     * @return IFilterNode
     */
    public function setSessionFilterTree($filterTree){
        if (!is_string($filterTree)){
            $arrayFilterTree = TreeCreator::treeToArray($filterTree);
            $filterTree = json_encode($arrayFilterTree);
        }
//        $this->Session->FilterTree = $filterTree;
        $_SESSION['FilterTree'] = $filterTree;
//        $_SESSION[$this->getSessionId('_tree')] = $filterTree;
        return $this->getSessionFilterTree();
    }

    // TODO: refactoring on that pendent
    /**
     * @return IFilterNode BlockExpressionNode
     */
    public function getDefaultFilterTree(){
        return new BlockExpressionNode();
    }




    // TODO: refactoring on that pendent
    public function getSessionId($suffixId){
        return \Dandelion\MVC\Application\Tools\getClassName(get_class($this)) . $suffixId;
    }

}